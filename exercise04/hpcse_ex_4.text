%----------------------------------------------------------------------------------------

\documentclass[a4paper,10pt]{article} % Uses article class in A4 format

%----------------------------------------------------------------------------------------
%	FORMATTING
%----------------------------------------------------------------------------------------

\setlength{\parskip}{0pt}
\setlength{\parindent}{0pt}
\setlength{\voffset}{-15pt}

%----------------------------------------------------------------------------------------
%	PACKAGES AND OTHER DOCUMENT CONFIGURATIONS
%----------------------------------------------------------------------------------------

\usepackage[a4paper, margin=2.5cm]{geometry} % Sets margin to 2.5cm for A4 Paper
\usepackage[onehalfspacing]{setspace} % Sets Spacing to 1.5

\usepackage[T1]{fontenc} % Use European encoding
\usepackage[utf8]{inputenc} % Use UTF-8 encoding
\usepackage{charter} % Use the Charter font
\usepackage{microtype} % Slightly tweak font spacing for aesthetics

\usepackage[english]{babel} % Language hyphenation and typographical rules

\usepackage{amsthm, amsmath, amssymb} % Mathematical typesetting
\usepackage{marvosym, wasysym} % More symbols
\usepackage{float} % Improved interface for floating objects
\usepackage[final, colorlinks = true, 
            linkcolor = black, 
            citecolor = black,
            urlcolor = black]{hyperref} % For hyperlinks in the PDF
\usepackage{graphicx, multicol} % Enhanced support for graphics
\usepackage{xcolor} % Driver-independent color extensions
\usepackage{rotating} % Rotation tools
\usepackage{listings, style/lstlisting} % Environment for non-formatted code, !uses style file!
\usepackage{pseudocode} % Environment for specifying algorithms in a natural way
\usepackage{style/avm} % Environment for f-structures, !uses style file!
\usepackage{booktabs} % Enhances quality of tables

\usepackage{tikz-qtree} % Easy tree drawing tool
\tikzset{every tree node/.style={align=center,anchor=north},
         level distance=2cm} % Configuration for q-trees
\usepackage{style/btree} % Configuration for b-trees and b+-trees, !uses style file!

\usepackage{titlesec} % Allows customization of titles
\renewcommand\thesection{\arabic{section}.} % Arabic numerals for the sections
\titleformat{\section}{\large}{\thesection}{1em}{}
\renewcommand\thesubsection{\alph{subsection})} % Alphabetic numerals for subsections
\titleformat{\subsection}{\large}{\thesubsection}{1em}{}
\renewcommand\thesubsubsection{\roman{subsubsection}.} % Roman numbering for subsubsections
\titleformat{\subsubsection}{\large}{\thesubsubsection}{1em}{}

\usepackage[all]{nowidow} % Removes widows

\usepackage[backend=biber,style=numeric,
            sorting=nyt, natbib=true]{biblatex} % Complete reimplementation of bibliographic facilities
\addbibresource{main.bib}
\usepackage{csquotes} % Context sensitive quotation facilities

\usepackage[yyyymmdd]{datetime} % Uses YEAR-MONTH-DAY format for dates
\renewcommand{\dateseparator}{-} % Sets dateseparator to '-'

\usepackage{fancyhdr} % Headers and footers
\pagestyle{fancy} % All pages have headers and footers
\fancyhead{}\renewcommand{\headrulewidth}{0pt} % Blank out the default header
\fancyfoot[L]{\textsc{Robin Worreby}} % Custom footer text
\fancyfoot[C]{} % Custom footer text
\fancyfoot[R]{\thepage} % Custom footer text

\newcommand{\note}[1]{\marginpar{\scriptsize \textcolor{red}{#1}}} % Enables comments in red on margin
\usepackage[shortlabels]{enumitem}
\usepackage{minted}
\usemintedstyle{friendly}
\usepackage[bf]{caption}
%----------------------------------------------------------------------------------------

\begin{document}

%----------------------------------------------------------------------------------------
%	TITLE SECTION
%----------------------------------------------------------------------------------------

\title{template_assignment} % Article title
\fancyhead[C]{}
\begin{minipage}{0.295\textwidth} % Left side of title section
\raggedright
HPCSE1\\ % Your lecture or course
\footnotesize % Authors text size
%\hfill\\ % Uncomment if right minipage has more lines
Robin Worreby, 16-921-298 % Your name, your matriculation number
\medskip\hrule
\end{minipage}
\begin{minipage}{0.4\textwidth} % Center of title section
\centering 
\large % Title text size
Exercise 04\\ % Assignment title and number
\normalsize % Subtitle text size
Vectorization and MPI % Assignment subtitle
\end{minipage}
\begin{minipage}{0.295\textwidth} % Right side of title section
\raggedleft
\today\\ % Date
\footnotesize % Email text size
%\hfill\\ % Uncomment if left minipage has more lines
rworreby@student.ethz.ch% Your email
\medskip\hrule
\end{minipage}

%----------------------------------------------------------------------------------------
%	ARTICLE CONTENTS
%----------------------------------------------------------------------------------------

\setcounter{section}{2}

\section{Implementing a distributed reduction}
The scaling of the optimized reduction is better, namely $\mathcal{O}(log(N))$ compared to $\mathcal{O}(N)$. Therefore, the optimized version is faster asymptotically. This was shown in the lecture and makes sense as the optimized version has $N / 2$ ranks making a reduction in every time step, whereas the naive one only reduces from one rank to the master, while the other ranks are waiting. A second advantage is the load balancing. For the naive version we're freeing one rank at every time step, while we're freeing half the ranks in the optimized reduction. This means we can start a new computation earlier on more ranks. The argumentation for this is the same as in the point before.

\section{MPI Bug Hunt}
\begin{enumerate}[a)]
\setcounter{enumi}{0}
\item
For multiple ranks we have a race condition. Both ranks open the same file and then write at the same time, making the output non-deterministic and not usable. This can be fixed by only letting one rank write, for example the root rank. We also have an issue with our loop index, as we're looping over $N+1$ item while our array site is $N$, which can cause a segmentation fault. 
\item

We have a deadlock. Both ranks send first and wait for the other rank to receive. This can be resolved by reordering the send and receive instructions such that for example rank 0 is sending and then receiving while rank 1 is first receiving and then sending. Another solution would be to use a non-blocking point-to-point communication, for example \texttt{MPI\_ISend}. Another bug is the type mismatch of the \texttt{MPI\_Send} and the \texttt{MPI\_Recv}. This can be fixed by changing the type in \texttt{MPI\_Recv} to \texttt{MPI\_DOUBLE}, as the value we're sending is a \texttt{double}.

\item
The output for just one rank is probably the following: \texttt{error: `cout` was not declared in this scope; ...}. If we assume that the code is in the namespace \texttt{std}, then the expected output would be: std\texttt{[0] 0}. For two or more ranks the program will get stuck and not print anything, as the \texttt{MPI\_Bcast} needs to be called by all ranks, so for more than one rank this code will not work. For just one rank it will work. Once we fix the issue from before, by moving the \texttt{MPI\_Bcast} it works for any number $n \ge 1$. Another issue is that we're trying to use \texttt{MPI\_Recv} to receive a broadcast. However, for collective communication we should use \texttt{MPI\_Bcast} itself and then (possibly) put a barrier afterwards (if we need to synchronize the receiving of the broadcast). This is fixed by removing the \texttt{MPI\_Recv}

\end{enumerate}

\bigskip
%----------------------------------------------------------------------------------------
%	REFERENCE LIST
%----------------------------------------------------------------------------------------

\printbibliography

%----------------------------------------------------------------------------------------

\end{document}

